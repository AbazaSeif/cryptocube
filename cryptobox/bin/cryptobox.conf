

############################################################################
# Gateway configuration section

# Type of interface used for gateway connection.
# Accepts values 'tun', 'tap', 'ethernet' or 'ip'
# Note: currently 'ethernet' and 'ip' types are not supported
Gateway.Interface.Type = tun

# The name of TUN/TAP interface ("tunm" by default) used for Gateway connection
# Note: see <Gateway.Interface.Type>
Gateway.Interface.Name = tunm

# The IPv4 address of interface which will be used for Gateway connection
# Valid only for raw 'ip' sockets listening on network OSI level 3
# Note: currently is not implemented
Gateway.Interface.IPAddress = 0.0.0.0

# The hardware address of interface (MAC) which will be used for Gateway connection
# Format is XX:XX:XX:XX:XX:XX where 'XX' is heximal value of byte in MAC address
# Valid only for raw 'ethernet' sockets listening on channel OSI level 2
# Note: currently is not implemented
Gateway.Interface.HWAddress = 00:00:00:00:00:00

# Use source file for input data instead the gateway socket
# Not using when empty or equals 'none'
Gateway.InputDumpFile = none

# Use destination file for output data (decoded) instead the gateway socket
# Not using when empty or equals 'none'
Gateway.OutputDumpFile = none

# Size of gateway buffer for incoming messages (from AES decoder) [Kb]
Gateway.IncomingMessagesBufferSize = 0

# Size of gateway buffer for outgoing messages (from socket or from InputDumpFile) [Kb]
Gateway.OutgoingMessagesBufferSize = 5120

# Maximum size of data what can be crypted with one AES256 key
# Note: the data amount per one AES key is limited by 1Mb
Gateway.SplitPackagePerKeyBytes = 204800

# Size of recv data block from socket or file
# Package will not be ecrypted while data block with specified size is not filled,
# or input data from socket buffer or from file will be splitted by blocks with defined sizes
# Note: the socket buffer is limited by 64Kb
# Note: value "0" disables the static buffering and recommended for mixed traffic
Gateway.SplitPackagePerSocketBufferBytes = 0

# Enables processing with TCP socket instead Gateway on <Gateway.eth0.IP> and port number from <Proxy.ListeningPort>
# Optional for using in testing between TCP clients transactions
# [true/false]
Proxy.Enabled = true

# IPv4 address for Proxy server usage. Parameter is not considered if 'Proxy.Enabled=false'
Proxy.IP = 0.0.0.0

# Proxy listening port. Parameter is not considered if 'Proxy.Enabled=false'
Proxy.Port = 5401



############################################################################3
# SSL configuration section

# IPv4 address of interface what used for SSL channel one (server)
SSL.ChannelOne.eth.IP = 0.0.0.0

# Listening port what used for SSL server to channel one incoming connection
SSL.ChannelOne.eth.Port = 5403

# IPv4 address of interface used for SSL channel two (client)
SSL.ChannelTwo.eth.IP = 0.0.0.0

# IPv4 address of remote interface on CryptoBox2 (server should be started on the other side)
SSL.ChannelTwo.RemoteIP = 0.0.0.0

# Listening port of the remote CryptoBox2 SSL server
SSL.ChannelTwo.RemotePort = 5409

# Path to CA certificate file
SSL.CertificateFile = ./ca.pem

# Path to certificate private key file
SSL.PrivateKeyFile = ./ca.key

# Password phrase of private key file.
# Used by certificate validation and will be considered in special modes of SSL security.
SSL.PrivateKeyPassword = CryptoBox

# Path to CA certificates.
# Used by certificate validation and will be considered in special modes of SSL security.
SSL.VerifyPath = .

# SSL verification mode.
# Values are: 'none', 'client', 'peer', 'fail_nocert' 
# May be combined through comma, e.g. 'client, fail_nocert' 
SSL.Mode = none



############################################################################3
# AES module configuration section

# Size of AES module buffer for incoming messages (decoded from OTP decipherer in waiting for AES processing) [Kb]
AES.IncomingMessagesBufferSize = 5120

# Size of AES module buffer for outgoing messages (encoded from AES in waiting for OTP cipherer) [Kb]
AES.OutgoingMessagesBufferSize = 5120

# Size of storage used for incoming AES keys [Kb]
# Remainder part of storage above the limitation will be flushed in backlog file 'aes_backup.in' 
AES.IncomingKeysStorageSize = 2048

# Size of storage used for outgoing AES keys (already pre-sent) [Kb]
# Remainder part of storage above the limitation will be flushed in backlog file 'aes_backup.out' 
AES.OutgoingKeysStorageSize = 1024

# Number of keys which should be pre-sent immediately after the channels established between boxes
AES.PresendKeysNumber = 512

# Password used for first connect authentification on AES security level.
# May be used for product licensing, etc. later, but currently is required only for establishing.
AES.FirstKeyPassword = CryptoBox.v1.0.0



############################################################################3
# OTP module configuration section

# Size of OTP module buffer for incoming messages (incoming from SSL channel in waiting for OTP decipherer) [Kb]
OTP.IncomingMessagesBufferSize = 5120

# Size of OTP module buffer for outgoing messages (encoded from OTP cipherer in waiting for sending via SSL channel) [Kb]
OTP.OutgoingMessagesBufferSize = 0

# Size of buffer for incoming packages which are in sequences gap [Kb]
# Note: OTP module raises exception in case when buffer is full and no gaps was resolved.
OTP.SequencesGapBufferSize = 10240

# Size of cache for image clusters which has been read but should be in memory for sequences gap detection [Kb]
# Note: depricated
OTP.ImageCacheSize = 102400

# Path to OTP image file
OTP.ImageFilePath = ./imageotp



############################################################################3
# Logging configuration section

# Print info about incoming network headers in log file './<type>_flow.in'
# Note: not valid with gateway emulation or when Proxy.Enabled=true
# [true/false]
Logging.In.NetworkHeaders = false

# Print info about outgoing network headers in log file './<type>_flow.out'
# Note: not valid with gateway emulation or when Proxy.Enabled=true
# [true/false]
Logging.Out.NetworkHeaders = false

# Print the data of incoming or outgoing network packages (exclude headers) in log file './<type>_flow.in/out'
# Note: not valid with gateway emulation or when Proxy.Enabled=true
# May affects on perfomance in case of large packages or intensive traffic
# [true/false]
Logging.NetworkPackagesData = false

# Print info about incoming AES packages (decoded from OTP in AES) in log file './aes.in'
# [true/false]
Logging.AesIn = false

# Print info about outgoing AES packages (encoded by AES to OTP) in log file './aes.out'
# [true/false]
Logging.AesOut = false

# Print info about incoming OTP packages (from SSL channels to OTP) in log file './otp.in'
# [true/false]
Logging.OtpIn = false

# Print info about outgoing OTP packages (from OTP to SSL channels) in log file './otp.out'
# [true/false]
Logging.OtpOut = false

